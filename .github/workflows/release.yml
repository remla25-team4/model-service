name: Release Model Service

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build_and_release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
    - name: Checkout tagged code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Parse version info from tag
      id: version_parser
      run: |
        RAW_VERSION="${{ github.ref_name }}"
        VERSION="${RAW_VERSION#v}"
        MAJOR=$(echo "$VERSION" | cut -d . -f 1)
        MINOR=$(echo "$VERSION" | cut -d . -f 2)
        PATCH=$(echo "$VERSION" | cut -d . -f 3)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "VERSION_MAJOR=$MAJOR" >> $GITHUB_ENV
        echo "VERSION_MINOR=$MINOR" >> $GITHUB_ENV
        echo "VERSION_PATCH=$PATCH" >> $GITHUB_ENV
        echo "Parsed version: $VERSION (Major: $MAJOR, Minor: $MINOR, Patch: $PATCH)"

    - name: Update version in app/__init__.py for the build
      run: |
        INIT_PY_PATH="app/__init__.py"
        echo "Temporarily setting version for the Docker build..."
        mkdir -p "$(dirname "$INIT_PY_PATH")"
        echo "__version__ = \"${{ env.VERSION }}\"" > "$INIT_PY_PATH"
        cat "$INIT_PY_PATH" # Log the content for verification

    - name: Build and push Docker image (multi-arch) for model-service
      run: |
        IMAGE_REPO_NAME_LOWER=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
        IMAGE_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        
        IMG_BASE_URL="ghcr.io/${IMAGE_OWNER_LOWER}/${IMAGE_REPO_NAME_LOWER}"
        echo "IMAGE_URL_FOR_RELEASE_NOTES=${IMG_BASE_URL}" >> $GITHUB_ENV

        echo "Building and pushing Docker images from the tagged commit..."
        docker buildx build --platform linux/amd64,linux/arm64 \
          -t "${IMG_BASE_URL}:${{ env.VERSION }}" \
          -t "${IMG_BASE_URL}:latest" \
          --push \
          .

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }} (model-service)
        body: |
          Automated release for model-service version **${{ github.ref_name }}**.

          **Key Points:**
          - Docker images were built from the code in this specific tag (`${{ github.sha }}`).
          - Multi-architecture images built for `linux/amd64` and `linux/arm64`.

          **Docker Image:**
          Pushed to: `${{ env.IMAGE_URL_FOR_RELEASE_NOTES }}`
          Available tags:
          - `${{ env.VERSION }}`
          - `latest`
        draft: false
        prerelease: false

    - name: Update version file on main branch
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "Configuring Git user..."
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        echo "Checking out main branch to update version..."
        git fetch origin main
        git checkout main

        INIT_PY_PATH="app/__init__.py"
        VERSION_TO_SET="${{ env.VERSION }}"
        
        echo "Updating version in $INIT_PY_PATH on main to $VERSION_TO_SET..."
        mkdir -p "$(dirname "$INIT_PY_PATH")"
        echo "__version__ = \"$VERSION_TO_SET\"" > "$INIT_PY_PATH"
        
        # Check for changes and commit/push if any
        if git diff --quiet "$INIT_PY_PATH"; then
          echo "No version changes to commit to main."
        else
          echo "Committing and pushing version update to main..."
          git add "$INIT_PY_PATH"
          git commit -m "chore(version): Bump version in main to ${{ env.VERSION }} [skip ci]"
          git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git main
        fi