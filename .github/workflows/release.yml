name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Parse version info from tag
      run: |
        # GITHUB_REF is like refs/tags/v2.3.5, so strip the first 11 chars
        VERSION=${GITHUB_REF:11}
        MAJOR=$(echo "$VERSION" | cut -d . -f 1)
        MINOR=$(echo "$VERSION" | cut -d . -f 2)
        PATCH=$(echo "$VERSION" | cut -d . -f 3)
        echo "version=$VERSION" >> $GITHUB_ENV
        echo "version_major=$MAJOR" >> $GITHUB_ENV
        echo "version_minor=$MINOR" >> $GITHUB_ENV
        echo "version_patch=$PATCH" >> $GITHUB_ENV

    - name: Update version in __init__.py
      run: |
        # Update the version in __init__.py
        sed -i "s/__version__ = \".*\"/__version__ = \"${{ env.version }}\"/" app/__init__.py
        # Commit and push the version update
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github-actions@github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git add app/__init__.py
        git commit -m "Update version to ${{ env.version }}"
        git push origin HEAD:api-integration

    - name: Build and push Docker image
      run: |
        IMG="ghcr.io/${{github.repository}}"
        IMG=${IMG@L} # lower case the image
        docker build \
          --tag $IMG:${{ env.version }} \
          --tag $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
          --tag $IMG:${{ env.version_major }}.latest \
          --tag $IMG:latest \
          .
        docker push --all-tags $IMG 